name: Check Commit Messages for ci skip

on: 
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  # The use of ci skips, documented here: https://circleci.com/docs/skip-build/
  # is not supported by our use of a merge queue. This action checks for such commits 
  # and fails the build if any are found.
  check-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install PyGithub

      - name: Check commit messages for [ci skip] or [skip ci]
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -c "
          import os
          from github import Github
          g = Github(os.getenv('GH_TOKEN'))
          repo = g.get_repo('${{ github.repository }}')
          pr = repo.get_pull(${{ github.event.pull_request.number }})
          commits = pr.get_commits()
          for commit in commits:
              if '[ci skip]' in commit.commit.message[:250] or '[skip ci]' in commit.commit.message[:250]:
                  print(f'Commit {commit.sha} contains [ci skip] or [skip ci] in the first 250 characters.')
                  exit(1)
          "
